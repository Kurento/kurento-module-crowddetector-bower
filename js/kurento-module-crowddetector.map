{"version":3,"file":"bundle.js","sources":["../node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../lib/index.js","../lib/CrowdDetectorFilter.js","../lib/complexTypes/index.js","../lib/complexTypes/RegionOfInterest.js","../lib/complexTypes/RelativePoint.js","../lib/complexTypes/RegionOfInterestConfig.js","../node_modules/checktype/index.js","../node_modules/inherits/inherits_browser.js"],"names":["CrowdDetectorFilter","require","exports","complexTypes","id","super_","call","this","inherits","ChecktypeError","Filter","register","abstracts","constructorParams","mediaPipeline","type","required","rois","isList","events","concat","module","check","key","value","RegionOfInterest","RegionOfInterestConfig","RelativePoint","checkRegionOfInterest","checkType","points","regionOfInterestConfig","checkRelativePoint","x","y","checkRegionOfInterestConfig","occupancyLevelMin","occupancyLevelMed","occupancyLevelMax","occupancyNumFramesToEvent","fluidityLevelMin","fluidityLevelMed","fluidityLevelMax","fluidityNumFramesToEvent","sendOpticalFlowEvent","opticalFlowNumFramesToEvent","opticalFlowNumFramesToReset","opticalFlowAngleOffset","SyntaxError","name","constructor","checkArray","Array","item","i","checkBoolean","Boolean","checkNumber","Number","checkInteger","isInteger","checkObject","Object","checkString","String","options","undefined","isArray","checker","console","warn","checkParams","params","scheme","class_name","result","s","keys","length","checkMethodParams","callparams","method_params","param","index","slice","warning","nVal","isFinite","Math","floor","boolean","double","float","int","create","ctor","superCtor","prototype","enumerable","writable","configurable","TempCtor"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module crowddetector\n *\n * @copyright 2013-2014 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar CrowdDetectorFilter = require('./CrowdDetectorFilter');\n\n\nexports.CrowdDetectorFilter = CrowdDetectorFilter;\n\nexports.complexTypes = require('./complexTypes');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar inherits = require('inherits');\n\nvar ChecktypeError = require('checktype').ChecktypeError;\n\nvar Filter = require('kurento-client').register.abstracts.Filter;\n\n/**\n * Create a {@link module:crowddetector.CrowdDetectorFilter CrowdDetectorFilter}\n *\n * @classdesc\n *  Filter that detects people agglomeration in video streams\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:crowddetector.CrowdDetectorFilter\n *\n * @param {external:String} id\n *\n * @fires {@link module:crowddetector#event:CrowdDetectorDirection CrowdDetectorDirection}\n * @fires {@link module:crowddetector#event:CrowdDetectorFluidity CrowdDetectorFluidity}\n * @fires {@link module:crowddetector#event:CrowdDetectorOccupancy CrowdDetectorOccupancy}\n */\nfunction CrowdDetectorFilter(id){\n  CrowdDetectorFilter.super_.call(this, id);\n};\ninherits(CrowdDetectorFilter, Filter);\n\n/**\n * @alias module:crowddetector.CrowdDetectorFilter.constructorParams\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the {@link module:core.MediaPipeline MediaPipeline} to which the filter belongs\n *\n * @property {module:crowddetector/complexTypes.RegionOfInterest} rois\n *  Regions of interest for the filter\n */\nCrowdDetectorFilter.constructorParams = {\n  mediaPipeline: {\n    type: 'MediaPipeline',\n    required: true\n  },\n\n  rois: {\n    type: 'RegionOfInterest',\n    isList: true,\n    required: true\n  },\n};\n\n/**\n * @alias module:crowddetector.CrowdDetectorFilter.events\n *\n * @extend module:core/abstracts.Filter.events\n */\nCrowdDetectorFilter.events = Filter.events.concat(['CrowdDetectorDirection', 'CrowdDetectorFluidity', 'CrowdDetectorOccupancy']);\n\nmodule.exports = CrowdDetectorFilter;\n\nCrowdDetectorFilter.check = function(key, value)\n{\n  if(!(value instanceof CrowdDetectorFilter))\n    throw ChecktypeError(key, CrowdDetectorFilter, value);\n};\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module crowddetector/complexTypes\n *\n * @copyright 2013-2014 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar RegionOfInterest = require('./RegionOfInterest');\nvar RegionOfInterestConfig = require('./RegionOfInterestConfig');\nvar RelativePoint = require('./RelativePoint');\n\n\nexports.RegionOfInterest = RegionOfInterest;\nexports.RegionOfInterestConfig = RegionOfInterestConfig;\nexports.RelativePoint = RelativePoint;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar checkType = require('checktype');\n\n/**\n * Checker for {@link crowddetector/complexTypes.RegionOfInterest}\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:crowddetector/complexTypes.RegionOfInterest} value\n */\nfunction checkRegionOfInterest(key, value)\n{\n  checkType('RelativePoint', key+'.points', value.points, true);\n  checkType('RegionOfInterestConfig', key+'.regionOfInterestConfig', value.regionOfInterestConfig, true);\n  checkType('String', key+'.id', value.id, true);\n};\n\n\n/**\n * Region of interest for some events in a video processing filter\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @typedef crowddetector/complexTypes.RegionOfInterest\n *\n * @type {Object}\n * @property {module:crowddetector/complexTypes.RelativePoint} points\n *  list of points delimiting the region of interest\n * @property {module:crowddetector/complexTypes.RegionOfInterestConfig} regionOfInterestConfig\n *  data structure for configuration of CrowdDetector regions of interest\n * @property {external:String} id\n *  identifier of the region of interest. The string used for the id must begin \n *   with a letter followed by an alphanumeric character included (/-_.:+)\n */\n\n\nmodule.exports = checkRegionOfInterest;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar checkType = require('checktype');\n\n/**\n * Checker for {@link crowddetector/complexTypes.RelativePoint}\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:crowddetector/complexTypes.RelativePoint} value\n */\nfunction checkRelativePoint(key, value)\n{\n  checkType('float', key+'.x', value.x, true);\n  checkType('float', key+'.y', value.y, true);\n};\n\n\n/**\n * Relative points in a physical screen, values are a percentage relative to the image dimensions. X left to right and Y top to down.\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @typedef crowddetector/complexTypes.RelativePoint\n *\n * @type {Object}\n * @property {external:Number} x\n *  Percentage relative to the image width to calculate the X coordinate of the point [0..1]\n * @property {external:Number} y\n *  Percentage relative to the image height to calculate the Y coordinate of the point [0..1]\n */\n\n\nmodule.exports = checkRelativePoint;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar checkType = require('checktype');\n\n/**\n * Checker for {@link crowddetector/complexTypes.RegionOfInterestConfig}\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:crowddetector/complexTypes.RegionOfInterestConfig} value\n */\nfunction checkRegionOfInterestConfig(key, value)\n{\n  checkType('int', key+'.occupancyLevelMin', value.occupancyLevelMin);\n  checkType('int', key+'.occupancyLevelMed', value.occupancyLevelMed);\n  checkType('int', key+'.occupancyLevelMax', value.occupancyLevelMax);\n  checkType('int', key+'.occupancyNumFramesToEvent', value.occupancyNumFramesToEvent);\n  checkType('int', key+'.fluidityLevelMin', value.fluidityLevelMin);\n  checkType('int', key+'.fluidityLevelMed', value.fluidityLevelMed);\n  checkType('int', key+'.fluidityLevelMax', value.fluidityLevelMax);\n  checkType('int', key+'.fluidityNumFramesToEvent', value.fluidityNumFramesToEvent);\n  checkType('boolean', key+'.sendOpticalFlowEvent', value.sendOpticalFlowEvent);\n  checkType('int', key+'.opticalFlowNumFramesToEvent', value.opticalFlowNumFramesToEvent);\n  checkType('int', key+'.opticalFlowNumFramesToReset', value.opticalFlowNumFramesToReset);\n  checkType('int', key+'.opticalFlowAngleOffset', value.opticalFlowAngleOffset);\n};\n\n\n/**\n * data structure for configuration of CrowdDetector regions of interest\n *\n * @memberof module:crowddetector/complexTypes\n *\n * @typedef crowddetector/complexTypes.RegionOfInterestConfig\n *\n * @type {Object}\n * @property {external:Integer} occupancyLevelMin\n *  minimun occupancy percentage in the ROI to send occupancy events\n * @property {external:Integer} occupancyLevelMed\n *  send occupancy level = 1 if the occupancy percentage is between occupancy_level_min and this level\n * @property {external:Integer} occupancyLevelMax\n *  send occupancy level = 2 if the occupancy percentage is between occupancy_level_med and this level,\n *  and send occupancy level = 3 if the occupancy percentage is between this level and 100\n * @property {external:Integer} occupancyNumFramesToEvent\n *  number of consecutive frames that a new occupancy level has to be detected to recognize it as a occupancy level change.\n *  A new occupancy event will be send\n * @property {external:Integer} fluidityLevelMin\n *  minimun fluidity percentage in the ROI to send fluidity events\n * @property {external:Integer} fluidityLevelMed\n *  send fluidity level = 1 if the fluidity percentage is between fluidity_level_min and this level\n * @property {external:Integer} fluidityLevelMax\n *  send fluidity level = 2 if the fluidity percentage is between fluidity_level_med and this level,\n *   and send fluidity level = 3 if the fluidity percentage is between this level and 100\n * @property {external:Integer} fluidityNumFramesToEvent\n *  number of consecutive frames that a new fluidity level has to be detected to recognize it as a fluidity level change.\n *   A new fluidity event will be send\n * @property {external:Boolean} sendOpticalFlowEvent\n *  Enable/disable the movement direction detection into the ROI\n * @property {external:Integer} opticalFlowNumFramesToEvent\n *  number of consecutive frames that a new direction of movement has to be detected to recognize a new movement direction. \n *   A new direction event will be send\n * @property {external:Integer} opticalFlowNumFramesToReset\n *  number of consecutive frames in order to reset the counter of repeated directions\n * @property {external:Integer} opticalFlowAngleOffset\n *  Direction of the movement. The angle could have four different values: \n *   left (0), up (90), right (180) and down (270). This cartesian axis could be rotated adding an angle offset\n */\n\n\nmodule.exports = checkRegionOfInterestConfig;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n\n/**\n * Number.isInteger() polyfill\n * @function external:Number#isInteger\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger Number.isInteger}\n */\nif (!Number.isInteger) {\n  Number.isInteger = function isInteger (nVal) {\n    return typeof nVal === \"number\" && isFinite(nVal)\n        && nVal > -9007199254740992 && nVal < 9007199254740992\n        && Math.floor(nVal) === nVal;\n  };\n}\n\n\nfunction ChecktypeError(key, type, object)\n{\n  return SyntaxError(key + ' param should be a ' + (type.name || type)\n                    + ', not ' + value.constructor.name);\n}\n\n\n//\n// Basic types\n//\n\nfunction checkArray(type, key, value)\n{\n  if(!(value instanceof Array))\n    throw ChecktypeError(key, 'Array of '+type, value);\n\n  for(var i=0, item; item=value[i]; i++)\n    checkType(type, key+'['+i+']', item);\n};\n\nfunction checkBoolean(key, value)\n{\n  if(typeof value != 'boolean')\n    throw ChecktypeError(key, Boolean, value);\n};\n\nfunction checkNumber(key, value)\n{\n  if(typeof value != 'number')\n    throw ChecktypeError(key, Number, value);\n};\n\nfunction checkInteger(key, value)\n{\n  if(!Number.isInteger(value))\n    throw ChecktypeError(key, 'Integer', value);\n};\n\nfunction checkObject(key, value)\n{\n  if(typeof value != 'object')\n    throw ChecktypeError(key, Object, value);\n};\n\nfunction checkString(key, value)\n{\n  if(typeof value != 'string')\n    throw ChecktypeError(key, String, value);\n};\n\n\n// Checker functions\n\nfunction checkType(type, key, value, options)\n{\n  options = options || {};\n\n  if(value != undefined)\n  {\n    if(options.isArray)\n      return checkArray(type, key, value);\n\n    var checker = checkType[type];\n    if(checker) return checker(key, value);\n\n    console.warn(\"Could not check \"+key+\", unknown type \"+type);\n//    throw TypeError(\"Could not check \"+key+\", unknown type \"+type);\n  }\n\n  else if(options.required)\n    throw SyntaxError(key+\" param is required\");\n\n};\n\nfunction checkParams(params, scheme, class_name)\n{\n  var result = {};\n\n  // check MediaObject params\n  for(var key in scheme)\n  {\n    var value = params[key];\n\n    var s = scheme[key];\n\n    var options = {required: s.required, isArray: s.isList};\n\n    checkType(s.type, key, value, options);\n\n    if(value == undefined) continue;\n\n    result[key] = value;\n    delete params[key];\n  };\n\n  if(Object.keys(params).length)\n    console.warn('Unused params for '+class_name+':', params);\n\n  return result;\n};\n\nfunction checkMethodParams(callparams, method_params)\n{\n  var result = {};\n\n  var index=0, param;\n  for(; param=method_params[index]; index++)\n  {\n    var key = param.name;\n    var value = callparams[index];\n\n    var options = {required: param.required, isArray: param.isList};\n\n    checkType(param.type, key, value, options);\n\n    result[key] = value;\n  }\n\n  var params = callparams.slice(index);\n  if(params.length)\n    console.warning('Unused params:', params);\n\n  return result;\n};\n\n\nmodule.exports = checkType;\n\ncheckType.checkParams    = checkParams;\ncheckType.ChecktypeError = ChecktypeError;\n\n\n// Basic types\n\ncheckType.boolean = checkBoolean;\ncheckType.double  = checkNumber;\ncheckType.float   = checkNumber;\ncheckType.int     = checkInteger;\ncheckType.Object  = checkObject;\ncheckType.String  = checkString;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"]}